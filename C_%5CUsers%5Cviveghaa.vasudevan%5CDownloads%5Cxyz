{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Loading libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# laoding the data\n",
    "df = pd.read_csv('C:/Users/viveghaa.vasudevan/Desktop/practice/orders.csv')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1037 entries, 0 to 1036\n",
      "Data columns (total 25 columns):\n",
      "order_number                  1037 non-null int64\n",
      "email                         1037 non-null object\n",
      "sku                           1037 non-null object\n",
      "name                          1037 non-null object\n",
      "total                         1037 non-null int64\n",
      "quantity                      1037 non-null int64\n",
      "timestamp                     1037 non-null object\n",
      "shipto_person_name            1037 non-null object\n",
      "shipto_person_street_1        1037 non-null object\n",
      "shipto_person_street_2        0 non-null float64\n",
      "shipto_person_city            1037 non-null object\n",
      "shipto_person_country_code    1037 non-null object\n",
      "shipto_person_postal_code     477 non-null object\n",
      "shipto_person_state_code      1037 non-null object\n",
      "shipto_person_country_name    1037 non-null object\n",
      "shipto_person_state_name      1037 non-null object\n",
      "shipto_person_phone           1037 non-null float64\n",
      "payment_method                1037 non-null object\n",
      "payment_status                1037 non-null object\n",
      "fulfillment_status            1037 non-null object\n",
      "order_subtotal                1037 non-null int64\n",
      "order_shipping                1037 non-null int64\n",
      "order_total                   1037 non-null int64\n",
      "order_tracking_number         0 non-null float64\n",
      "note_for_staff                1017 non-null object\n",
      "dtypes: float64(3), int64(6), object(16)\n",
      "memory usage: 202.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "order_number                     0\n",
       "email                            0\n",
       "sku                              0\n",
       "name                             0\n",
       "total                            0\n",
       "quantity                         0\n",
       "timestamp                        0\n",
       "shipto_person_name               0\n",
       "shipto_person_street_1           0\n",
       "shipto_person_street_2        1037\n",
       "shipto_person_city               0\n",
       "shipto_person_country_code       0\n",
       "shipto_person_postal_code      560\n",
       "shipto_person_state_code         0\n",
       "shipto_person_country_name       0\n",
       "shipto_person_state_name         0\n",
       "shipto_person_phone              0\n",
       "payment_method                   0\n",
       "payment_status                   0\n",
       "fulfillment_status               0\n",
       "order_subtotal                   0\n",
       "order_shipping                   0\n",
       "order_total                      0\n",
       "order_tracking_number         1037\n",
       "note_for_staff                  20\n",
       "dtype: int64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Checking for null values in the data\n",
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_number</th>\n",
       "      <th>total</th>\n",
       "      <th>quantity</th>\n",
       "      <th>shipto_person_street_2</th>\n",
       "      <th>shipto_person_phone</th>\n",
       "      <th>order_subtotal</th>\n",
       "      <th>order_shipping</th>\n",
       "      <th>order_total</th>\n",
       "      <th>order_tracking_number</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1038.000000</td>\n",
       "      <td>1038.000000</td>\n",
       "      <td>1038.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.037000e+03</td>\n",
       "      <td>1038.000000</td>\n",
       "      <td>1038.000000</td>\n",
       "      <td>1038.000000</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>121.374759</td>\n",
       "      <td>1401.285164</td>\n",
       "      <td>3.421965</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.586588e+11</td>\n",
       "      <td>13128.765896</td>\n",
       "      <td>799.229287</td>\n",
       "      <td>13927.995183</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>42.277077</td>\n",
       "      <td>2526.158791</td>\n",
       "      <td>5.916420</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.126095e+12</td>\n",
       "      <td>12289.485655</td>\n",
       "      <td>24.830834</td>\n",
       "      <td>12290.331713</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>47.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>7.034214e+07</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>84.000000</td>\n",
       "      <td>441.250000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.037175e+09</td>\n",
       "      <td>5577.000000</td>\n",
       "      <td>800.000000</td>\n",
       "      <td>6377.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>120.000000</td>\n",
       "      <td>840.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.188663e+09</td>\n",
       "      <td>9545.000000</td>\n",
       "      <td>800.000000</td>\n",
       "      <td>10345.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>158.750000</td>\n",
       "      <td>1560.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.348029e+12</td>\n",
       "      <td>14975.000000</td>\n",
       "      <td>800.000000</td>\n",
       "      <td>15775.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>194.000000</td>\n",
       "      <td>45800.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.349090e+12</td>\n",
       "      <td>100535.000000</td>\n",
       "      <td>800.000000</td>\n",
       "      <td>101335.000000</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       order_number         total     quantity  shipto_person_street_2  \\\n",
       "count   1038.000000   1038.000000  1038.000000                     0.0   \n",
       "mean     121.374759   1401.285164     3.421965                     NaN   \n",
       "std       42.277077   2526.158791     5.916420                     NaN   \n",
       "min       47.000000     50.000000     1.000000                     NaN   \n",
       "25%       84.000000    441.250000     1.000000                     NaN   \n",
       "50%      120.000000    840.000000     2.000000                     NaN   \n",
       "75%      158.750000   1560.000000     3.000000                     NaN   \n",
       "max      194.000000  45800.000000   100.000000                     NaN   \n",
       "\n",
       "       shipto_person_phone  order_subtotal  order_shipping    order_total  \\\n",
       "count         1.037000e+03     1038.000000     1038.000000    1038.000000   \n",
       "mean          8.586588e+11    13128.765896      799.229287   13927.995183   \n",
       "std           1.126095e+12    12289.485655       24.830834   12290.331713   \n",
       "min           7.034214e+07       50.000000        0.000000      50.000000   \n",
       "25%           8.037175e+09     5577.000000      800.000000    6377.000000   \n",
       "50%           8.188663e+09     9545.000000      800.000000   10345.000000   \n",
       "75%           2.348029e+12    14975.000000      800.000000   15775.000000   \n",
       "max           2.349090e+12   100535.000000      800.000000  101335.000000   \n",
       "\n",
       "       order_tracking_number  \n",
       "count                    0.0  \n",
       "mean                     NaN  \n",
       "std                      NaN  \n",
       "min                      NaN  \n",
       "25%                      NaN  \n",
       "50%                      NaN  \n",
       "75%                      NaN  \n",
       "max                      NaN  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Maximum number of units bought in the data : 100\n",
      "Minimum numer of units bought in the data : 1\n"
     ]
    }
   ],
   "source": [
    "#Checking max and min number of units to see if its logical\n",
    "print('Maximum number of units bought in the data :',df['quantity'].max())\n",
    "print('Minimum numer of units bought in the data :', df['quantity'].min())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5 ALIVE BERRY BLAST FRUIT DRINK 78CL</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5 ALIVE CITRUS BURST FRUIT DRINK 78CL</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5 ALIVE PULPY 30CL</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5 ALIVE TROPICAL FRUIT DRINK PET 90CL</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7UP PET BOTTLE 60CL</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>VITAMILK CHOCO SHAKE SOY MILK 300ML BTL</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>VITAMILK SOY MILK 300ML BOTTLE</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>VITAMILK SOYMILK 1000ML</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>WATER MELON - REGULAR</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>WHEAT BREAD</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>186 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        name  quantity\n",
       "0       5 ALIVE BERRY BLAST FRUIT DRINK 78CL        21\n",
       "1      5 ALIVE CITRUS BURST FRUIT DRINK 78CL        15\n",
       "2                         5 ALIVE PULPY 30CL        12\n",
       "3      5 ALIVE TROPICAL FRUIT DRINK PET 90CL         6\n",
       "4                        7UP PET BOTTLE 60CL         8\n",
       "..                                       ...       ...\n",
       "181  VITAMILK CHOCO SHAKE SOY MILK 300ML BTL        34\n",
       "182           VITAMILK SOY MILK 300ML BOTTLE        12\n",
       "183                  VITAMILK SOYMILK 1000ML         4\n",
       "184                    WATER MELON - REGULAR         1\n",
       "185                              WHEAT BREAD        54\n",
       "\n",
       "[186 rows x 2 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#products and their total quantity\n",
    "tran=df\n",
    "tran.groupby(['name'],as_index=False)['quantity'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "tran=df\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "lekki                      292\n",
       "VI                         238\n",
       "ikoyi                      180\n",
       "ikeja                      150\n",
       "illupeju                    58\n",
       "Ketu                        30\n",
       "Gbagada                     26\n",
       "Maryland Housing Estate     19\n",
       "mushin                      16\n",
       "oshodi                      12\n",
       "yaba                        10\n",
       "Iyana Dopemu bus stop        3\n",
       "Ogudu                        3\n",
       "Name: shipto_person_city, dtype: int64"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#area and the number of items bought in each area\n",
    "tran['shipto_person_city'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>email</th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>232</th>\n",
       "      <td>erniesno@gmail.com</td>\n",
       "      <td>EVA TABLE WATER 0.75CL</td>\n",
       "      <td>100</td>\n",
       "      <td>7500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>986</th>\n",
       "      <td>vimla2@aol.com</td>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 150CL</td>\n",
       "      <td>72</td>\n",
       "      <td>7560.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>201</th>\n",
       "      <td>dolapobello1@yahoo.com</td>\n",
       "      <td>INDOMIE NOODLES - CHICKEN 70GM</td>\n",
       "      <td>60</td>\n",
       "      <td>3000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>940</th>\n",
       "      <td>tmabogunje@gmail.com</td>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 60CL</td>\n",
       "      <td>40</td>\n",
       "      <td>2600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>341</th>\n",
       "      <td>iqrarmalik@gmail.com</td>\n",
       "      <td>AQUAFINA PREMIUM DRINKING WATER 75CL</td>\n",
       "      <td>36</td>\n",
       "      <td>2520.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>696</th>\n",
       "      <td>omobolanles.adeniran@gmail.com</td>\n",
       "      <td>VITAMILK CHOCO SHAKE SOY MILK 300ML BTL</td>\n",
       "      <td>1</td>\n",
       "      <td>300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>393</th>\n",
       "      <td>jkadiri@msn.com</td>\n",
       "      <td>NESCAFE BREAKFAST 3 IN 1 320G SACHET</td>\n",
       "      <td>1</td>\n",
       "      <td>850.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>401</th>\n",
       "      <td>kehindo@gmail.com</td>\n",
       "      <td>EGGS 12 PCS</td>\n",
       "      <td>1</td>\n",
       "      <td>755.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>405</th>\n",
       "      <td>kenekw@gmail.com</td>\n",
       "      <td>CLASSIC BREAD</td>\n",
       "      <td>1</td>\n",
       "      <td>370.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>667</th>\n",
       "      <td>oeukiri@gmail.com</td>\n",
       "      <td>ARIEL BRILLANT STAIN REMOVAL 900G</td>\n",
       "      <td>1</td>\n",
       "      <td>740.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>446 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                              email                                     name  \\\n",
       "232              erniesno@gmail.com                   EVA TABLE WATER 0.75CL   \n",
       "986                  vimla2@aol.com    NESTLE PURE LIFE DRINKING WATER 150CL   \n",
       "201          dolapobello1@yahoo.com           INDOMIE NOODLES - CHICKEN 70GM   \n",
       "940            tmabogunje@gmail.com     NESTLE PURE LIFE DRINKING WATER 60CL   \n",
       "341            iqrarmalik@gmail.com     AQUAFINA PREMIUM DRINKING WATER 75CL   \n",
       "..                              ...                                      ...   \n",
       "696  omobolanles.adeniran@gmail.com  VITAMILK CHOCO SHAKE SOY MILK 300ML BTL   \n",
       "393                 jkadiri@msn.com     NESCAFE BREAKFAST 3 IN 1 320G SACHET   \n",
       "401               kehindo@gmail.com                              EGGS 12 PCS   \n",
       "405                kenekw@gmail.com                            CLASSIC BREAD   \n",
       "667               oeukiri@gmail.com        ARIEL BRILLANT STAIN REMOVAL 900G   \n",
       "\n",
       "     quantity   total  \n",
       "232       100  7500.0  \n",
       "986        72  7560.0  \n",
       "201        60  3000.0  \n",
       "940        40  2600.0  \n",
       "341        36  2520.0  \n",
       "..        ...     ...  \n",
       "696         1   300.0  \n",
       "393         1   850.0  \n",
       "401         1   755.0  \n",
       "405         1   370.0  \n",
       "667         1   740.0  \n",
       "\n",
       "[446 rows x 4 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dff1= df1.groupby(['email','name','quantity'],as_index=False)['total'].sum()\n",
    "\n",
    "dff1.sort_values(by=['quantity'],ascending=[False],inplace=True)\n",
    "\n",
    "dff1.groupby(['email','quantity']).head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>ABSOLUT VODKA BLUE 1LTR</td>\n",
       "      <td>10</td>\n",
       "      <td>45800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>BAILEYS IRISH CREAM 700ML</td>\n",
       "      <td>6</td>\n",
       "      <td>33780.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>BIG BULL NIGERIAN PARBOILED RICE 5KG</td>\n",
       "      <td>10</td>\n",
       "      <td>26500.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>J.W RED LABEL WHISKY 70CL</td>\n",
       "      <td>6</td>\n",
       "      <td>26310.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>DETTOL ANTISEPTIC DISINFECTANT 500ML</td>\n",
       "      <td>1</td>\n",
       "      <td>16240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>CLASSIC BREAD</td>\n",
       "      <td>2</td>\n",
       "      <td>15540.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225</th>\n",
       "      <td>GARLIC - PREMIUM</td>\n",
       "      <td>1</td>\n",
       "      <td>14200.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>336</th>\n",
       "      <td>NESTLE GOLDEN MORN 1KG</td>\n",
       "      <td>1</td>\n",
       "      <td>13950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>459</th>\n",
       "      <td>TOMATO - REGULAR</td>\n",
       "      <td>2</td>\n",
       "      <td>13910.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186</th>\n",
       "      <td>ESSENTIAL KIT MP 5</td>\n",
       "      <td>2</td>\n",
       "      <td>13830.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>DANO UHT FULL CREAM MILK 3.5% FAT 1LTR TETRAPACK</td>\n",
       "      <td>10</td>\n",
       "      <td>12800.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>337</th>\n",
       "      <td>NESTLE GOLDEN MORN 1KG</td>\n",
       "      <td>2</td>\n",
       "      <td>12400.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259</th>\n",
       "      <td>HARPIC POWER PLUS ORGNL 725ML</td>\n",
       "      <td>12</td>\n",
       "      <td>12240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309</th>\n",
       "      <td>JAMESON IRISH WHISKEY 700ML</td>\n",
       "      <td>2</td>\n",
       "      <td>12210.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>178</th>\n",
       "      <td>EGGS 12 PCS</td>\n",
       "      <td>2</td>\n",
       "      <td>11950.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>324</th>\n",
       "      <td>MOLFIX 4 MAXI 7-18KG 32+2 FREE</td>\n",
       "      <td>6</td>\n",
       "      <td>11700.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>ARIEL AUTOMATIC WASHING MACHINE POWDER 1KG</td>\n",
       "      <td>10</td>\n",
       "      <td>11300.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>BAILEYS IRISH CREAM 700ML</td>\n",
       "      <td>1</td>\n",
       "      <td>11260.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>318</th>\n",
       "      <td>MAMA'S PRIDE RICE 5KG</td>\n",
       "      <td>1</td>\n",
       "      <td>10600.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>278</th>\n",
       "      <td>HOLLANDIA LONG LIFE UHT FULL CRM MILK 1L</td>\n",
       "      <td>20</td>\n",
       "      <td>10500.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 name  quantity    total\n",
       "19                            ABSOLUT VODKA BLUE 1LTR        10  45800.0\n",
       "46                          BAILEYS IRISH CREAM 700ML         6  33780.0\n",
       "54               BIG BULL NIGERIAN PARBOILED RICE 5KG        10  26500.0\n",
       "308                         J.W RED LABEL WHISKY 70CL         6  26310.0\n",
       "171              DETTOL ANTISEPTIC DISINFECTANT 500ML         1  16240.0\n",
       "111                                     CLASSIC BREAD         2  15540.0\n",
       "225                                  GARLIC - PREMIUM         1  14200.0\n",
       "336                            NESTLE GOLDEN MORN 1KG         1  13950.0\n",
       "459                                  TOMATO - REGULAR         2  13910.0\n",
       "186                                ESSENTIAL KIT MP 5         2  13830.0\n",
       "157  DANO UHT FULL CREAM MILK 3.5% FAT 1LTR TETRAPACK        10  12800.0\n",
       "337                            NESTLE GOLDEN MORN 1KG         2  12400.0\n",
       "259                     HARPIC POWER PLUS ORGNL 725ML        12  12240.0\n",
       "309                       JAMESON IRISH WHISKEY 700ML         2  12210.0\n",
       "178                                       EGGS 12 PCS         2  11950.0\n",
       "324                    MOLFIX 4 MAXI 7-18KG 32+2 FREE         6  11700.0\n",
       "39         ARIEL AUTOMATIC WASHING MACHINE POWDER 1KG        10  11300.0\n",
       "45                          BAILEYS IRISH CREAM 700ML         1  11260.0\n",
       "318                             MAMA'S PRIDE RICE 5KG         1  10600.0\n",
       "278          HOLLANDIA LONG LIFE UHT FULL CRM MILK 1L        20  10500.0"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#products with highest sales\n",
    "dff1= df1.groupby(['name','quantity'],as_index=False)['total'].sum()\n",
    "\n",
    "dff1.sort_values(by=['total'],ascending=[False],inplace=True)\n",
    "\n",
    "dff1.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>shipto_person_city</th>\n",
       "      <th>total</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>lekki</td>\n",
       "      <td>414860</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>ikoyi</td>\n",
       "      <td>362005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>VI</td>\n",
       "      <td>290960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ikeja</td>\n",
       "      <td>210724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>illupeju</td>\n",
       "      <td>57545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Gbagada</td>\n",
       "      <td>37750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Maryland Housing Estate</td>\n",
       "      <td>20850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>mushin</td>\n",
       "      <td>18240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>oshodi</td>\n",
       "      <td>15205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Ketu</td>\n",
       "      <td>12385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>yaba</td>\n",
       "      <td>8765</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ogudu</td>\n",
       "      <td>3000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iyana Dopemu bus stop</td>\n",
       "      <td>2195</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         shipto_person_city   total\n",
       "9                     lekki  414860\n",
       "7                     ikoyi  362005\n",
       "5                        VI  290960\n",
       "6                     ikeja  210724\n",
       "8                  illupeju   57545\n",
       "0                   Gbagada   37750\n",
       "3   Maryland Housing Estate   20850\n",
       "10                   mushin   18240\n",
       "11                   oshodi   15205\n",
       "2                      Ketu   12385\n",
       "12                     yaba    8765\n",
       "4                     Ogudu    3000\n",
       "1     Iyana Dopemu bus stop    2195"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#sales done by each city\n",
    "dff1= df.groupby(['shipto_person_city'],as_index=False)['total'].sum()\n",
    "\n",
    "dff1.sort_values(by=['total'],ascending=[False],inplace=True)\n",
    "\n",
    "dff1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5 ALIVE BERRY BLAST FRUIT DRINK 78CL</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5 ALIVE CITRUS BURST FRUIT DRINK 78CL</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5 ALIVE PULPY 30CL</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5 ALIVE TROPICAL FRUIT DRINK PET 90CL</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7UP PET BOTTLE 60CL</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>VITAMILK CHOCO SHAKE SOY MILK 300ML BTL</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>VITAMILK SOY MILK 300ML BOTTLE</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>VITAMILK SOYMILK 1000ML</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>WATER MELON - REGULAR</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>WHEAT BREAD</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>186 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        name  quantity\n",
       "0       5 ALIVE BERRY BLAST FRUIT DRINK 78CL        21\n",
       "1      5 ALIVE CITRUS BURST FRUIT DRINK 78CL        15\n",
       "2                         5 ALIVE PULPY 30CL        12\n",
       "3      5 ALIVE TROPICAL FRUIT DRINK PET 90CL         6\n",
       "4                        7UP PET BOTTLE 60CL         8\n",
       "..                                       ...       ...\n",
       "181  VITAMILK CHOCO SHAKE SOY MILK 300ML BTL        34\n",
       "182           VITAMILK SOY MILK 300ML BOTTLE        12\n",
       "183                  VITAMILK SOYMILK 1000ML         4\n",
       "184                    WATER MELON - REGULAR         1\n",
       "185                              WHEAT BREAD        54\n",
       "\n",
       "[186 rows x 2 columns]"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#products and total quantities\n",
    "dfquant= df.groupby(['name'],as_index=False)['quantity'].sum()\n",
    "\n",
    "#dff1.sort_values(by=['total'],ascending=[False],inplace=True)\n",
    "\n",
    "dfquant"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>frequency</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>name</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5 ALIVE BERRY BLAST FRUIT DRINK 78CL</th>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5 ALIVE CITRUS BURST FRUIT DRINK 78CL</th>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5 ALIVE PULPY 30CL</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5 ALIVE TROPICAL FRUIT DRINK PET 90CL</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7UP PET BOTTLE 60CL</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VITAMILK CHOCO SHAKE SOY MILK 300ML BTL</th>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VITAMILK SOY MILK 300ML BOTTLE</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VITAMILK SOYMILK 1000ML</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WATER MELON - REGULAR</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>WHEAT BREAD</th>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>186 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                         frequency\n",
       "name                                              \n",
       "5 ALIVE BERRY BLAST FRUIT DRINK 78CL             9\n",
       "5 ALIVE CITRUS BURST FRUIT DRINK 78CL            7\n",
       "5 ALIVE PULPY 30CL                               3\n",
       "5 ALIVE TROPICAL FRUIT DRINK PET 90CL            4\n",
       "7UP PET BOTTLE 60CL                              4\n",
       "...                                            ...\n",
       "VITAMILK CHOCO SHAKE SOY MILK 300ML BTL          6\n",
       "VITAMILK SOY MILK 300ML BOTTLE                   4\n",
       "VITAMILK SOYMILK 1000ML                          3\n",
       "WATER MELON - REGULAR                            1\n",
       "WHEAT BREAD                                     30\n",
       "\n",
       "[186 rows x 1 columns]"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#products and their frequency\n",
    "df['frequency']=df['name']\n",
    "dffreq= pd.DataFrame(df.groupby(['name'])['frequency'].count())\n",
    "\n",
    "#dff1.sort_values(by=['total'],ascending=[False],inplace=True)\n",
    "\n",
    "dffreq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "metadata": {},
   "outputs": [],
   "source": [
    "tran = pd.merge(dfquant,dffreq,left_on='name',right_on='name',how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5 ALIVE BERRY BLAST FRUIT DRINK 78CL</td>\n",
       "      <td>21</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5 ALIVE CITRUS BURST FRUIT DRINK 78CL</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5 ALIVE PULPY 30CL</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5 ALIVE TROPICAL FRUIT DRINK PET 90CL</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7UP PET BOTTLE 60CL</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>VITAMILK CHOCO SHAKE SOY MILK 300ML BTL</td>\n",
       "      <td>34</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182</th>\n",
       "      <td>VITAMILK SOY MILK 300ML BOTTLE</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>VITAMILK SOYMILK 1000ML</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>184</th>\n",
       "      <td>WATER MELON - REGULAR</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>WHEAT BREAD</td>\n",
       "      <td>54</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>186 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                        name  quantity  frequency\n",
       "0       5 ALIVE BERRY BLAST FRUIT DRINK 78CL        21          9\n",
       "1      5 ALIVE CITRUS BURST FRUIT DRINK 78CL        15          7\n",
       "2                         5 ALIVE PULPY 30CL        12          3\n",
       "3      5 ALIVE TROPICAL FRUIT DRINK PET 90CL         6          4\n",
       "4                        7UP PET BOTTLE 60CL         8          4\n",
       "..                                       ...       ...        ...\n",
       "181  VITAMILK CHOCO SHAKE SOY MILK 300ML BTL        34          6\n",
       "182           VITAMILK SOY MILK 300ML BOTTLE        12          4\n",
       "183                  VITAMILK SOYMILK 1000ML         4          3\n",
       "184                    WATER MELON - REGULAR         1          1\n",
       "185                              WHEAT BREAD        54         30\n",
       "\n",
       "[186 rows x 3 columns]"
      ]
     },
     "execution_count": 186,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#merging to get both frequency and quantity\n",
    "tran"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>INDOMIE NOODLES - CHICKEN 70GM</td>\n",
       "      <td>220</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 150CL</td>\n",
       "      <td>139</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>AQUAFINA PREMIUM DRINKING WATER 75CL</td>\n",
       "      <td>122</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>CLASSIC BREAD</td>\n",
       "      <td>120</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>TITUS SARDINES 125G</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>EVA TABLE WATER 0.75CL</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 60CL</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>SNICKERS CHOCOLATE 50G</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>INDOMIE NOODLES - ONION CHICKEN 70GM</td>\n",
       "      <td>71</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>TOMATO - REGULAR</td>\n",
       "      <td>69</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>SCHWEPPES VIRGIN MOJITO 33CL CAN</td>\n",
       "      <td>68</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>SCHWEPPES TONIC WATER CAN 33CL</td>\n",
       "      <td>63</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>DANO UHT FULL CREAM MILK 3.5% FAT 1LTR TETRAPACK</td>\n",
       "      <td>59</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>EVA TABLE WATER 150CL</td>\n",
       "      <td>57</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>COCA COLA 50CL PET</td>\n",
       "      <td>57</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>NESTLE PURE LIFE PREMIUM DRINKING WATER PROTEC...</td>\n",
       "      <td>56</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>SPRITE PET 60CL</td>\n",
       "      <td>56</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>WHEAT BREAD</td>\n",
       "      <td>54</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>CHICKEN PIE</td>\n",
       "      <td>49</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>HOLLANDIA LONG LIFE UHT FULL CRM MILK 1L</td>\n",
       "      <td>49</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  name  quantity  frequency\n",
       "110                     INDOMIE NOODLES - CHICKEN 70GM       220          1\n",
       "135              NESTLE PURE LIFE DRINKING WATER 150CL       139          1\n",
       "15                AQUAFINA PREMIUM DRINKING WATER 75CL       122          1\n",
       "43                                       CLASSIC BREAD       120          1\n",
       "173                                TITUS SARDINES 125G       100          1\n",
       "74                              EVA TABLE WATER 0.75CL       100          1\n",
       "136               NESTLE PURE LIFE DRINKING WATER 60CL        80          1\n",
       "164                             SNICKERS CHOCOLATE 50G        73          1\n",
       "111               INDOMIE NOODLES - ONION CHICKEN 70GM        71          1\n",
       "174                                   TOMATO - REGULAR        69          1\n",
       "161                   SCHWEPPES VIRGIN MOJITO 33CL CAN        68          1\n",
       "160                     SCHWEPPES TONIC WATER CAN 33CL        63          1\n",
       "57    DANO UHT FULL CREAM MILK 3.5% FAT 1LTR TETRAPACK        59          1\n",
       "75                               EVA TABLE WATER 150CL        57          1\n",
       "48                                  COCA COLA 50CL PET        57          1\n",
       "137  NESTLE PURE LIFE PREMIUM DRINKING WATER PROTEC...        56          1\n",
       "167                                    SPRITE PET 60CL        56          1\n",
       "185                                        WHEAT BREAD        54          1\n",
       "36                                         CHICKEN PIE        49          1\n",
       "103           HOLLANDIA LONG LIFE UHT FULL CRM MILK 1L        49          1"
      ]
     },
     "execution_count": 183,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#top 20 by quantity\n",
    "tran1=tran\n",
    "tran1.sort_values(by=['quantity'],ascending=[False],inplace=True)\n",
    "tran1.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>frequency</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>CLASSIC BREAD</td>\n",
       "      <td>120</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>174</th>\n",
       "      <td>TOMATO - REGULAR</td>\n",
       "      <td>69</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>185</th>\n",
       "      <td>WHEAT BREAD</td>\n",
       "      <td>54</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164</th>\n",
       "      <td>SNICKERS CHOCOLATE 50G</td>\n",
       "      <td>73</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>CHICKEN PIE</td>\n",
       "      <td>49</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>GOLDEN PENNY GARRI 1KG</td>\n",
       "      <td>43</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>EGGS 12 PCS</td>\n",
       "      <td>27</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>TITUS SARDINES 125G</td>\n",
       "      <td>100</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>PEAK FILLED INSTANT MILK POWDER 360/380G</td>\n",
       "      <td>19</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>179</th>\n",
       "      <td>TWIX CHOCOLATE 50G</td>\n",
       "      <td>44</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>FARMCRAFT EGGS-6</td>\n",
       "      <td>45</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>NESTLE GOLDEN MORN 1KG</td>\n",
       "      <td>17</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>HARPIC POWER PLUS ORGNL 725ML</td>\n",
       "      <td>28</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>FAMILIA CLASSIC NATURAL WHITENESS 4 TOILET ROLLS</td>\n",
       "      <td>28</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>GREEN GIANT NIBLETS SWEET CORN 340G</td>\n",
       "      <td>34</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>GINGER - REGULAR</td>\n",
       "      <td>14</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>ARIEL AUTOMATIC WASHING MACHINE POWDER 1KG</td>\n",
       "      <td>23</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>ELEX PEANUTS 475/510G</td>\n",
       "      <td>17</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>DANO UHT FULL CREAM MILK 3.5% FAT 1LTR TETRAPACK</td>\n",
       "      <td>59</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>DANGOTE REFINED GRANULATED SUGAR 1KG</td>\n",
       "      <td>14</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 name  quantity  frequency\n",
       "43                                      CLASSIC BREAD       120         59\n",
       "174                                  TOMATO - REGULAR        69         38\n",
       "185                                       WHEAT BREAD        54         30\n",
       "164                            SNICKERS CHOCOLATE 50G        73         19\n",
       "36                                        CHICKEN PIE        49         18\n",
       "90                             GOLDEN PENNY GARRI 1KG        43         18\n",
       "68                                        EGGS 12 PCS        27         17\n",
       "173                               TITUS SARDINES 125G       100         15\n",
       "143          PEAK FILLED INSTANT MILK POWDER 360/380G        19         14\n",
       "179                                TWIX CHOCOLATE 50G        44         14\n",
       "82                                   FARMCRAFT EGGS-6        45         14\n",
       "129                            NESTLE GOLDEN MORN 1KG        17         13\n",
       "98                      HARPIC POWER PLUS ORGNL 725ML        28         13\n",
       "77   FAMILIA CLASSIC NATURAL WHITENESS 4 TOILET ROLLS        28         13\n",
       "97                GREEN GIANT NIBLETS SWEET CORN 340G        34         12\n",
       "88                                   GINGER - REGULAR        14         12\n",
       "16         ARIEL AUTOMATIC WASHING MACHINE POWDER 1KG        23         12\n",
       "69                              ELEX PEANUTS 475/510G        17         11\n",
       "57   DANO UHT FULL CREAM MILK 3.5% FAT 1LTR TETRAPACK        59         11\n",
       "53               DANGOTE REFINED GRANULATED SUGAR 1KG        14         11"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#top 20 by  frequency\n",
    "tran3=tran1\n",
    "tran3.sort_values(by=['frequency'],ascending=[False],inplace=True)\n",
    "tran3.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>frequency</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>EVA TABLE WATER 0.75CL</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 150CL</td>\n",
       "      <td>139</td>\n",
       "      <td>5</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 60CL</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>INDOMIE NOODLES - CHICKEN 70GM</td>\n",
       "      <td>220</td>\n",
       "      <td>10</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>AQUAFINA PREMIUM DRINKING WATER 75CL</td>\n",
       "      <td>122</td>\n",
       "      <td>6</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>NESTLE PURE LIFE PREMIUM DRINKING WATER PROTEC...</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>AQUAFINA PREMIUM DRINKING WATER 150CL</td>\n",
       "      <td>41</td>\n",
       "      <td>3</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>FANTA ORANGE CAN 33CL</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>CASCADE WATER 1.5LTR</td>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>EVA TABLE WATER 150CL</td>\n",
       "      <td>57</td>\n",
       "      <td>5</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>TEEM SODA CAN 33CL</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>TEEM SODA WATER 50CL</td>\n",
       "      <td>41</td>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>INDOMIE NOODLES - ONION CHICKEN 70GM</td>\n",
       "      <td>71</td>\n",
       "      <td>7</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>SCHWEPPES TONIC WATER CAN 33CL</td>\n",
       "      <td>63</td>\n",
       "      <td>8</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>SPRITE 330ML</td>\n",
       "      <td>15</td>\n",
       "      <td>2</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>COCA COLA 330ML CAN</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>SPRITE PET 60CL</td>\n",
       "      <td>56</td>\n",
       "      <td>7</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>TITUS SARDINES 125G</td>\n",
       "      <td>100</td>\n",
       "      <td>15</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>FANTA ORANGE PET 60CL</td>\n",
       "      <td>39</td>\n",
       "      <td>7</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>SCHWEPPES BITTER LEMON CAN 33CL</td>\n",
       "      <td>43</td>\n",
       "      <td>7</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  name  quantity  frequency  \\\n",
       "74                              EVA TABLE WATER 0.75CL       100          1   \n",
       "135              NESTLE PURE LIFE DRINKING WATER 150CL       139          5   \n",
       "136               NESTLE PURE LIFE DRINKING WATER 60CL        80          3   \n",
       "110                     INDOMIE NOODLES - CHICKEN 70GM       220         10   \n",
       "15                AQUAFINA PREMIUM DRINKING WATER 75CL       122          6   \n",
       "137  NESTLE PURE LIFE PREMIUM DRINKING WATER PROTEC...        56          3   \n",
       "14               AQUAFINA PREMIUM DRINKING WATER 150CL        41          3   \n",
       "79                               FANTA ORANGE CAN 33CL        12          1   \n",
       "31                                CASCADE WATER 1.5LTR        23          2   \n",
       "75                               EVA TABLE WATER 150CL        57          5   \n",
       "171                                 TEEM SODA CAN 33CL        22          2   \n",
       "172                               TEEM SODA WATER 50CL        41          4   \n",
       "111               INDOMIE NOODLES - ONION CHICKEN 70GM        71          7   \n",
       "160                     SCHWEPPES TONIC WATER CAN 33CL        63          8   \n",
       "166                                       SPRITE 330ML        15          2   \n",
       "47                                 COCA COLA 330ML CAN        30          4   \n",
       "167                                    SPRITE PET 60CL        56          7   \n",
       "173                                TITUS SARDINES 125G       100         15   \n",
       "80                               FANTA ORANGE PET 60CL        39          7   \n",
       "156                    SCHWEPPES BITTER LEMON CAN 33CL        43          7   \n",
       "\n",
       "      mean  \n",
       "74   100.0  \n",
       "135   28.0  \n",
       "136   27.0  \n",
       "110   22.0  \n",
       "15    20.0  \n",
       "137   19.0  \n",
       "14    14.0  \n",
       "79    12.0  \n",
       "31    12.0  \n",
       "75    11.0  \n",
       "171   11.0  \n",
       "172   10.0  \n",
       "111   10.0  \n",
       "160    8.0  \n",
       "166    8.0  \n",
       "47     8.0  \n",
       "167    8.0  \n",
       "173    7.0  \n",
       "80     6.0  \n",
       "156    6.0  "
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#top 20 by mean, including frequency 1\n",
    "tran2=tran1\n",
    "tran2['mean']=round(tran2['quantity']/tran2['frequency'])\n",
    "tran2.sort_values(by=['mean'],ascending=[False],inplace=True)\n",
    "tran2.head(20)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>quantity</th>\n",
       "      <th>frequency</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 150CL</td>\n",
       "      <td>139</td>\n",
       "      <td>5</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>NESTLE PURE LIFE DRINKING WATER 60CL</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>INDOMIE NOODLES - CHICKEN 70GM</td>\n",
       "      <td>220</td>\n",
       "      <td>10</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>AQUAFINA PREMIUM DRINKING WATER 75CL</td>\n",
       "      <td>122</td>\n",
       "      <td>6</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137</th>\n",
       "      <td>NESTLE PURE LIFE PREMIUM DRINKING WATER PROTEC...</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>19.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>AQUAFINA PREMIUM DRINKING WATER 150CL</td>\n",
       "      <td>41</td>\n",
       "      <td>3</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>CASCADE WATER 1.5LTR</td>\n",
       "      <td>23</td>\n",
       "      <td>2</td>\n",
       "      <td>12.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>EVA TABLE WATER 150CL</td>\n",
       "      <td>57</td>\n",
       "      <td>5</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>TEEM SODA CAN 33CL</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172</th>\n",
       "      <td>TEEM SODA WATER 50CL</td>\n",
       "      <td>41</td>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>INDOMIE NOODLES - ONION CHICKEN 70GM</td>\n",
       "      <td>71</td>\n",
       "      <td>7</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>167</th>\n",
       "      <td>SPRITE PET 60CL</td>\n",
       "      <td>56</td>\n",
       "      <td>7</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>COCA COLA 330ML CAN</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>166</th>\n",
       "      <td>SPRITE 330ML</td>\n",
       "      <td>15</td>\n",
       "      <td>2</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>160</th>\n",
       "      <td>SCHWEPPES TONIC WATER CAN 33CL</td>\n",
       "      <td>63</td>\n",
       "      <td>8</td>\n",
       "      <td>8.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>173</th>\n",
       "      <td>TITUS SARDINES 125G</td>\n",
       "      <td>100</td>\n",
       "      <td>15</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>FANTA ORANGE PET 60CL</td>\n",
       "      <td>39</td>\n",
       "      <td>7</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>156</th>\n",
       "      <td>SCHWEPPES BITTER LEMON CAN 33CL</td>\n",
       "      <td>43</td>\n",
       "      <td>7</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181</th>\n",
       "      <td>VITAMILK CHOCO SHAKE SOY MILK 300ML BTL</td>\n",
       "      <td>34</td>\n",
       "      <td>6</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>HOLLANDIA LONG LIFE UHT FULL CRM MILK 1L</td>\n",
       "      <td>49</td>\n",
       "      <td>8</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  name  quantity  frequency  \\\n",
       "135              NESTLE PURE LIFE DRINKING WATER 150CL       139          5   \n",
       "136               NESTLE PURE LIFE DRINKING WATER 60CL        80          3   \n",
       "110                     INDOMIE NOODLES - CHICKEN 70GM       220         10   \n",
       "15                AQUAFINA PREMIUM DRINKING WATER 75CL       122          6   \n",
       "137  NESTLE PURE LIFE PREMIUM DRINKING WATER PROTEC...        56          3   \n",
       "14               AQUAFINA PREMIUM DRINKING WATER 150CL        41          3   \n",
       "31                                CASCADE WATER 1.5LTR        23          2   \n",
       "75                               EVA TABLE WATER 150CL        57          5   \n",
       "171                                 TEEM SODA CAN 33CL        22          2   \n",
       "172                               TEEM SODA WATER 50CL        41          4   \n",
       "111               INDOMIE NOODLES - ONION CHICKEN 70GM        71          7   \n",
       "167                                    SPRITE PET 60CL        56          7   \n",
       "47                                 COCA COLA 330ML CAN        30          4   \n",
       "166                                       SPRITE 330ML        15          2   \n",
       "160                     SCHWEPPES TONIC WATER CAN 33CL        63          8   \n",
       "173                                TITUS SARDINES 125G       100         15   \n",
       "80                               FANTA ORANGE PET 60CL        39          7   \n",
       "156                    SCHWEPPES BITTER LEMON CAN 33CL        43          7   \n",
       "181            VITAMILK CHOCO SHAKE SOY MILK 300ML BTL        34          6   \n",
       "103           HOLLANDIA LONG LIFE UHT FULL CRM MILK 1L        49          8   \n",
       "\n",
       "     mean  \n",
       "135  28.0  \n",
       "136  27.0  \n",
       "110  22.0  \n",
       "15   20.0  \n",
       "137  19.0  \n",
       "14   14.0  \n",
       "31   12.0  \n",
       "75   11.0  \n",
       "171  11.0  \n",
       "172  10.0  \n",
       "111  10.0  \n",
       "167   8.0  \n",
       "47    8.0  \n",
       "166   8.0  \n",
       "160   8.0  \n",
       "173   7.0  \n",
       "80    6.0  \n",
       "156   6.0  \n",
       "181   6.0  \n",
       "103   6.0  "
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#top 20 by mean excluding frequency 1\n",
    "tran3 = tran2.loc[tran2['frequency'] > 1]\n",
    "tran3.sort_values(by=['mean'],ascending=[False],inplace=True)\n",
    "tran3.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>shipto_person_city</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>lekki</th>\n",
       "      <td>109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VI</th>\n",
       "      <td>108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ikoyi</th>\n",
       "      <td>106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ikeja</th>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>illupeju</th>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ketu</th>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gbagada</th>\n",
       "      <td>24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Maryland Housing Estate</th>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mushin</th>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>oshodi</th>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yaba</th>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iyana Dopemu bus stop</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ogudu</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         name\n",
       "shipto_person_city           \n",
       "lekki                     109\n",
       "VI                        108\n",
       "ikoyi                     106\n",
       "ikeja                      95\n",
       "illupeju                   43\n",
       "Ketu                       27\n",
       "Gbagada                    24\n",
       "Maryland Housing Estate    18\n",
       "mushin                     15\n",
       "oshodi                     12\n",
       "yaba                       10\n",
       "Iyana Dopemu bus stop       3\n",
       "Ogudu                       3"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#no of products bought area wise\n",
    "\n",
    "dfcity= pd.DataFrame(df.groupby(['shipto_person_city'])['name'].nunique())\n",
    "dfcity.sort_values(by=['name'],ascending=[False],inplace=True)\n",
    "dfcity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>shipto_person_city</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>lekki</td>\n",
       "      <td>1081</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>VI</td>\n",
       "      <td>857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>ikoyi</td>\n",
       "      <td>646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>ikeja</td>\n",
       "      <td>431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Gbagada</td>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>illupeju</td>\n",
       "      <td>138</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>mushin</td>\n",
       "      <td>103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Maryland Housing Estate</td>\n",
       "      <td>37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Ketu</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>yaba</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>oshodi</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Iyana Dopemu bus stop</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Ogudu</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         shipto_person_city  quantity\n",
       "9                     lekki      1081\n",
       "5                        VI       857\n",
       "7                     ikoyi       646\n",
       "6                     ikeja       431\n",
       "0                   Gbagada       138\n",
       "8                  illupeju       138\n",
       "10                   mushin       103\n",
       "3   Maryland Housing Estate        37\n",
       "2                      Ketu        36\n",
       "12                     yaba        33\n",
       "11                   oshodi        21\n",
       "1     Iyana Dopemu bus stop        19\n",
       "4                     Ogudu        11"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#quantity of products area wise\n",
    "dfcity1= df.groupby(['shipto_person_city'],as_index=False)['quantity'].sum()\n",
    "dfcity1.sort_values(by=['quantity'],ascending=[False],inplace=True)\n",
    "dfcity1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>email</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>shipto_person_city</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>lekki</th>\n",
       "      <td>43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>VI</th>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ikoyi</th>\n",
       "      <td>26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ikeja</th>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>illupeju</th>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gbagada</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Maryland Housing Estate</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mushin</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>oshodi</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>yaba</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Iyana Dopemu bus stop</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ketu</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ogudu</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         email\n",
       "shipto_person_city            \n",
       "lekki                       43\n",
       "VI                          28\n",
       "ikoyi                       26\n",
       "ikeja                       18\n",
       "illupeju                     8\n",
       "Gbagada                      3\n",
       "Maryland Housing Estate      3\n",
       "mushin                       3\n",
       "oshodi                       3\n",
       "yaba                         2\n",
       "Iyana Dopemu bus stop        1\n",
       "Ketu                         1\n",
       "Ogudu                        1"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#no of customers area wise\n",
    "dfcity3=pd.DataFrame(df.groupby(['shipto_person_city'])['email'].nunique())\n",
    "dfcity3.sort_values(by=['email'],ascending=[False],inplace=True)\n",
    "dfcity3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
